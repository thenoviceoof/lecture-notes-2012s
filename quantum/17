Quantum Computing
lecture #17
2012/03/22
================================================================================

10 minutes late

fourier transform! horray

fuck, why is it so hot?

skip review, finishing up now

--------------------------------------------------------------------------------
Overview

applications of QFT (quantum fourier transform)
 - phase estimation
 - factorization
 - etc etc

--------------------------------------------------------------------------------
phase estimation

input:
  U_(2^k, 2^k) unitary matrix
  |u>, eigenvector of U

U|u> = \lambda |u> = e^(i x) |u>, where x\in R

x/(2\pi) = \floor(x/(2\pi)).((x/(2\pi)) % 1.0)  // break into int/frac parts
fractional part is the phase, \phi

so, what's the phase corresponding to \lambda?
e^(i x) = e^(2i\pi x/(2\pi)) = e^(2\pi i \phi), where \phi\in [0,1)

Goal: to estimate \phi with accuracy 2^-n
  |\phi - \hat\phi| \leq 2^-n
  with probability > 0.5

\phi = .\phi_1 \phi_2 \phi_3 ... \phi_n | \phi_n+1
we want until \phi_n, which is the accuracy constraint

error \leq \sum_{j=n+1}^\infty \phi_j 2^-j
      \leq \sum_{j=n+1}^\infty 2^-j
      = 1/2^(n+1) \sum_j=0^\infty 1/2^j
      = 1/2^(n+1) 1/(1-1/2)
      = 1/2^n

Assumptions:
 - |u> given as implemented as a quantum state
   (this could be a very expensive operation)
 - We are given U^(2^j), j=0..n
   (this can also be extremely expensive)
 - We can also apply Ctl-U^(2^j)

U^(2^j)|u> = \lambda^(2^j) |u>
           = (e^(2\pi i \phi))^(2^j) |u>
           = e^(2\pi i \phi 2^j) |u>
           = e^(2\pi i (\phi_1 ... \phi_j . \phi_j+1 ...)) |u>
           = e^(2\pi i (. \phi_j+1 ...)) |u>
             // due to e^(2\pi i) = 1

PAGE 14, FIGURE 1: circuit

(|0>+|1>)/\sqrt{2}
-> Ctl-U^(2^j) >- (|0>|u> + |1> U^(2^j) |u>)/\sqrt{2}
 = (|0>|u> + |1> e^(2\pi i \phi 2^j) |u>)/\sqrt{2}
 = (|0>|u> + |1> e^(2\pi i .\phi_j+1 ... ) |u>)/\sqrt{2}

Idea:
(|0>+|1>)/\sqrt{2}
-> Ctl-U^(2^(t-1)) >- (|0>|u> + |1> e^(2\pi i .\phi_t ... ) |u>)/\sqrt{2}
(|0>+|1>)/\sqrt{2}
-> Ctl-U^(2^(t-2)) >- (|0>|u> + |1> e^(2\pi i .\phi_(t-1) ... ) |u>)/\sqrt{2}
...
(|0>+|1>)/\sqrt{2}
-> Ctl-U^(2^0) >- (|0>|u> + |1> e^(2\pi i .\phi_1 ... ) |u>)/\sqrt{2}

it looks kind of like a fourier transform???

make another assumption:
  \phi_(t+1) = \phi_(t+2) ... = 0
  <=>
  2^t \phi = integer

  F|\phi_1 .. \phi_t> |u>
  -> F^H \tensor I >-
  |\phi_1 .. \phi_t> |u>

and oh god, a huge circuit:
PAGE 14, FIGURE 2: a ginormous circuit

|0>^(\tensor t) |u>
-> H^(\tensor t)\tensor I >-
(|0>+|1>)^(\tensor t-1)/\sqrt{2} (|0|u>+|1>|u>)/\sqrt{2}
-> Ctl-U^(2^0) >-  // w/ qubit 1
(|0>+|1>)^(\tensor t-1)/\sqrt{2} (|0|u>+|1>e^(2i\pi .\phi_1..\phi_t)|u>)/\sqrt{2}
-> Ctl-U^(2^1) >-  // w/ qubit 2
(|0>+|1>)^(\tensor t-2)/\sqrt{2}
(|0|u>+|1>e^(2i\pi .\phi_2..\phi_t)|u>)/\sqrt{2}
(|0|u>+|1>e^(2i\pi .\phi_1..\phi_t)|u>)/\sqrt{2}
... etc ...
(|0>+|1>)^(\tensor t-j)/\sqrt{2}
(|0|u>+|1>e^(2i\pi .\phi_(j+1)..\phi_t)|u>)/\sqrt{2}
...
(|0|u>+|1>e^(2i\pi .\phi_1..\phi_t)|u>)/\sqrt{2}
= (|0> + e^(2i\pi .\phi_t)) (|0> + e^(2i\pi .\phi_(t-1)\phi_t)) ...
  (|0> + e^(2i\pi .\phi_1 ... ))

remember, exponent:
2^(t-1)\phi = .\phi_t
2^0 \phi = .\phi_1\phi_2...

it's a bit hot in here, I'm barely understanding what is going on

|0>^(\tensor t)|u>
-> H^(\tensor n) >-
1/2^(t/2) \sum_(j_t=0)^1 \sum_(j_(t-1))...\sum_(j_1) |j_t..j_2>|j_1>|u>
= 1/2^(t/2) \sum_(j_t=0)^1...\sum_(j_2) |j_t..j_2> (|0>+|1>) |u>
-> Ctl-U^1 >-
1/2^(t/2) \sum_(j_t=0)^1...\sum_(j_2) |j_t..j_2> (|0>|u>+|1>U|u>)
= 1/2^(t/2) \sum_(j_t=0)^1...\sum_(j_3) |j_t..j_3>
  (|0>+|1>) (|0>|u>+|1>U|u>)
= 1/2^(t/2) \sum_(j_t=0)^1...\sum_(j_3) |j_t..j_3>
  (|00>|u> + |01>U|u> + |10>|u>+|11>U|u>)
-> Ctl-U^2 >-
1/2^(t/2) \sum_(j_t=0)^1...\sum_(j_3) |j_t..j_3>
(|00>|u> + |01>U|u> + |10>U^2|u>+|11>U^3|u>)
... etc ...
1/2^(t/2) (\sum_j^(2^t-1) |j> U^j |u>)

PAGE 14, FIGURE 3: another view of the circuit

After this point, we have the fourier transform (tada!)